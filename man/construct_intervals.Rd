% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/construct_intervals.R
\name{construct_intervals}
\alias{construct_intervals}
\title{Intervals for linear mixed effects}
\usage{
construct_intervals(
  type_method = c("parametric", "semiparametric", "analytical"),
  type_var_estimator = c("var_mixed", "mse_a", "mse_b", "mse_3t", "mse_spa", "mse_bc"),
  model_type = c("NERM"),
  formula_y,
  data_sample,
  cluster_means,
  id_cluster,
  alpha = 0.05,
  n_boot = 1000,
  boot_seed = 1,
  ...
)
}
\arguments{
\item{type_method}{Method to construct intervals}

\item{type_var_estimator}{Type of variance estimator}

\item{model_type}{Type of model, for now only NERM is supported}

\item{formula_y}{Formula for fitting NERM}

\item{data_sample}{Data frame}

\item{cluster_means}{Cluster-level covariates for fixed parameters}

\item{id_cluster}{Vector with cluster labels}

\item{alpha}{Level alpha to construct intervals}

\item{n_boot}{Number of bootstrap samples, default n_boot = 1000}

\item{boot_seed}{Vector with cluster labels}

\item{...}{Additional parameters}
}
\value{
List with following parameters:
\item{int_up}{Upper boundary of individual interval}
\item{int_down}{Lower boundary of individual interval}
\item{length_ind}{Length of individual interval}
\item{int_sim_up}{Upper boundary of simultaneous interval}
\item{int_sim_down}{Lower boundary of simultaneous interval}
\item{length_sim}{Length of simulaneous interval}
}
\description{
Function construct_intLME is a wrapper function to
construct simultaneous and individual intervals for
linear mixed effects. For the moment, only NERM is implemented,
but the function can be easily extended to other model types
}
\examples{

set.seed(11992)
m = 25
n_j = 5
n = m * n_j
scaling_factor_e = 1
scaling_factor_u = sqrt(0.5)
x_ij = runif(n, 0, 1)
X = cbind(X0 = rep(1, n), X1 = x_ij)
t_X  = t(X)
id_cluster = rep(1:m, each = n_j)
beta = c(1, 1)

cluster_means <- as.matrix(aggregate(X,
list(id_cluster),
FUN = mean)[, -1])

#Formula to construct intervals
formula_y <-  y ~ -1 + X0 + X1 + (1| id_cluster)

data_sample <- generate_NERM(generate_u = list(type = "chisquared",
                                               scaling_factor = 1,
                                               dg = 6),
                             generate_e = list(type = "chisquared",
                                               scaling_factor = 1,
                                               dg = 6),
                             beta = beta,
                             X = X,
                             id_cluster = id_cluster,
                             start_seed = 1,
                             no_sim = 1,
                             cluster_means = cluster_means)

intervals_3t <- construct_intervals(type_method = c("parametric"),
                                    type_var_estimator = c("mse_3t"),
                                    model_type = c("NERM"),
                                    formula_y, data_sample,
                                    cluster_means = cluster_means,
                                    id_cluster = id_cluster,
                                    alpha = 0.05,
                                    n_boot = 100,
                                    boot_seed = 1)


intervals_bc <- construct_intervals(type_method = c("parametric"),
                                    type_var_estimator = c("mse_bc"),
                                    model_type = c("NERM"),
                                    formula_y, data_sample,
                                    cluster_means = cluster_means,
                                    id_cluster = id_cluster,
                                    alpha = 0.05,
                                    n_boot = 100,
                                    boot_seed = 1)

intervals_b <- construct_intervals(type_method = c("parametric"),
                                   type_var_estimator = c("mse_b"),
                                   model_type = c("NERM"),
                                   formula_y, data_sample,
                                   cluster_means = cluster_means,
                                   id_cluster = id_cluster,
                                   alpha = 0.05,
                                   n_boot = 100,
                                   boot_seed = 1)

intervals_spa <- construct_intervals(type_method = c("parametric"),
                                     type_var_estimator = c("mse_spa"),
                                     model_type = c("NERM"),
                                     formula_y, data_sample,
                                     cluster_means = cluster_means,
                                     id_cluster = id_cluster,
                                     alpha = 0.05,
                                     n_boot = 100,
                                     boot_seed = 1)

}
